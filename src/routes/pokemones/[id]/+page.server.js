import { API_URL } from '$lib/constantes/index.js';
import { error } from '@sveltejs/kit';

export async function load({ params }) {
	try {
		const apiUrl = new URL(`${API_URL}/pokemon/${params.id}`);
		const response = await fetch(apiUrl);

		if (!response.ok) {
			if (response.status === 404) {
				error(404, {
					message: `No se encontr√≥ el Pok√©mon con ID ${params.id}`,
					title: "Pok√©mon no encontrado",
					icon: "üêæ",
					suggestions: [
						"Verifica que el ID del Pok√©mon sea correcto",
						"Los IDs v√°lidos van del 1 al 1010",
						"Prueba buscando por nombre en la lista de Pok√©mones"
					]
				});
			}
			error(response.status, {
				message: "Hubo un problema al cargar la informaci√≥n del Pok√©mon",
				title: "Error del servidor",
				icon: "‚ö†Ô∏è"
			});
		}

		const pokemon = await response.json();

		// Validar que tenga datos m√≠nimos
		if (!pokemon || !pokemon.nombre) {
			error(500, {
				message: "Los datos del Pok√©mon est√°n incompletos",
				title: "Error en los datos",
				icon: "üîß"
			});
		}

		return {
			pokemon
		};
	} catch (err) {
		if (err.status) {
			// Re-lanzar errores de SvelteKit
			throw err;
		}
		
		// Error de red u otros errores
		error(503, {
			message: "No se pudo conectar con el servidor. Int√©ntalo m√°s tarde.",
			title: "Error de conexi√≥n",
			icon: "üåê",
			suggestions: [
				"Verifica tu conexi√≥n a internet",
				"El servidor podr√≠a estar temporalmente no disponible"
			]
		});
	}
}
